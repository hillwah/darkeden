DONE:
Packet.h : Fixed ID order for all packets
CGRequestInfoHandler.cpp : Return maximum of 255 instead of 150 for char level
CGLearnSkillHandler.cpp : Enabled REFLECTION
SkillUtil.cpp : Modified the increaseSkillExp function to call sendSlayerSkillInfo on skill level up
				Does not overwrite current ep with maxep on levelup in case it's already higher
AR.cpp/SG.cpp/SMG.cpp/SR.cpp/SkillInfo.cpp : Fixed query to work with newer mysql versions
Several : Removed excessive output
		  Removed the g_pTestConfig stuff scattered around the source
CGSayHandler.cpp : Added command *openstash
				   Fixed *create to deny specific item groups from being used (SWEEPER, BLOOD_BIBLE, etc)
main.cpp : Servers read the conf files from the conf folder instead of having to pass it as a parameter
Ousters.cpp : Fixed ousters' stone swapping exploit
Profile.cpp/Profile.h/PacketProfile.cpp/PacketProfile.h/ClientManager.cpp/ZoneGroupThread.cpp : Disabled file output
CGSkillToInventoryHandler.cpp/CGSkillToNamedHandler.cpp/CGSkillToObjectHandler.cpp/CGSkillToSelfHandler.cpp/CGSkillToTileHandler.cpp/CGBloodDrainHandler.cpp : Fixed Werewolf bug
 CGAttackHandler.cpp : Fix paralyze/explosion water/ccw/coma exploit, prevents skills to be cast and normal attacks to be used
SoulChain.cpp : Message is sent to the target to let them know somebody is arriving
*.conf : Checked all the configuration options and added them to the .conf files, commented what is known so far
PlayerCreature.cpp : Heal on level up for Advanced Classes and send levelUP effect
PlayerCreature.h : Changed getGoodsInventory method to call loadGoods, logout is no longer necessary to get new items from the shopping basket
RottenApple.cpp : Rotten Apple's PVP damage cut to 1/3
 MonsterInfo.cpp/Effect.h : Created a new immunity flag IMMUNE_TO_ROTTEN_APPLE
Utility.cpp : logfile stores the files in the log folder
InventoryInfo.cpp/InventoryInfo.h : Commented out Height/Width from the write/read methods, changed the getSize() and getMaxSize() methods
GCAddMonsterFromBurrowing.cpp/GCSkillFailed2.cpp/GCStatusCurrentHP.cpp/GCAddEffect.cpp/GCCreatureDied.cpp/GCAddMonsterCorpse.cpp : Added flag
CGMove.cpp : Fixed the direction order
			 Added flag
IncomingPlayerManager.cpp/CGConnectHandler.cpp : Commented out calls to SEND_SYSTEM_AVAILABILITIES
SocketOutputStream.cpp/SocketOutputStream.h : Added m_Counter to constructor and writePacket methods
gameserver/Makefile : Removed compilation of gameservertest lib, cppunit is no longer needed
LuaState.cpp/LuaState.h : Updated lua calls so that it now uses lua 5.1
						  Fixed the lua includes in order for it to build correctly

TODO:
Remove the useless packet encryption code used by test clients
Make a treasures' table, or softcode it to .txt
Make a quests' table
	Remove everything related to XML/xerces-c
Review python code to check wether it should be removed or improved (possibly the later)
Review lua code to check if it should be kept and, if useful, port it to python instead
	Code the missing files (.luc) described in the database in order to have the server fully functional
Make Zone loading code read client's Zone files instead of having a different set of files
	If needed, create a table to hold waypoint information
Translate all database stuff to English and check the code behind each of them
Translate all debug messages to English if necessary and log them instead, else remove them
Remove the massive amount of throw()'s in the code and do proper error handling instead, preventing server crashes
Code the missing skills
Check all db queries to make sure no hardcoded DB name is used (should use the config)
Fix 'monsters in safezone' problem, have to check the actual x/y to see if it's a safezone and move it to the maximum x/y allowed for the knockback (check CGSkillToTileHandler.cpp for a close enough example)
Remove the testing server stuff (used by the -t param)
Add support for the pet attribute clearing items
Check throw holy water, make it send back the exp information and do damage to the target
SkillUtil.cpp : Fix Slayers' skills so it doesn't level up to a higher level than allowed by the current char's lvl (max: 49 at 24, 74 at 49, 99 at 74, 100)
Look into why flare's effect stay on characters even though it is already over (UNCONFIRMED)
Look into why ousters' stones easily get high class options
Change the order on AttrInfo table and expand it's options
Player should not receive info on invisible players/monsters. Unless affected by a skill that allows them to (less network traffic and prevents certain hacks, may not be doable because of the position on the map)
Prevent PK in lairs
Make it impossible to register a character name with non-roman characters
Expand the DirectiveSet Manager. Determine player's class, stats, skills, buffs
Fix poison class skills so they give exp/alignment/etc
Fix effects continuing after the death/destruction of the object that triggered it
Check FlagManager.cpp for hardcodes (python stuff)
Gunner damage should be based on dex after JC
Fix the database in order to have correct referential integrity (FOREIGN KEYs with CASCADE delete)
CGSayHandler.cpp:3300 : Need to remove that hardcode and probably merge the chief lookup function with the normal lookup
Add the following columns to the ZoneInfo table: AllowLotto, LottoChance, Allow3opt, 3optChance
	Add the following rows to the AttrInfo table: allow3opt, 3optchance
	Change the treasure and zone source files to use these new options
GDRLairManager.cpp needs to be reviewed heavily, code has a bunch of hardcodes and bad code
Needs to review the quest code to not allow exploits (ex: you can start a quest with a "no motorcycle allowed" condition when on a motorcycle)
InitAllStat.cpp needs to be reviewed heavily, many hardcodes here, they need to either be put in the database or the configuration files
CGAddItemToItemHandler.cpp/DB : Make it so that the upgrade items have a failchance associated instead of a hardcode

ULTIMATE GOALS: English documentation/comments
				Not a single compilation warning